version: 2

docker_defaults: &docker_defaults
    working_directory: /go/src/github.com/L-oris/go-heroku-continuous_deployment
    docker:
        - image: circleci/golang:1.10.3

restore_cache: &restore_cache
    keys:
        - deps-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}

save_cache: &save_cache
    key: deps-{{ arch }}-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
    paths:
        - /go/pkg/dep/
        - /go/src/github.com/L-oris/go-heroku-continuous_deployment/vendor/

jobs:
    build:
        working_directory: /go/src/github.com/L-oris/go-heroku-continuous_deployment
        docker:
            - image: circleci/golang:1.10.3
        steps:
            - checkout
            - *restore_cache
            - run: go get -u github.com/golang/dep/cmd/dep
            - run:
                  name: Build
                  command: |
                      dep ensure
                      go build -v
            - *save_cache

    test:
        working_directory: /go/src/github.com/L-oris/go-heroku-continuous_deployment
        docker:
            - image: circleci/golang:1.10.3
        steps:
            - checkout
            - *restore_cache
            - run:
                  name: Test
                  command: |
                      go fmt ./...
                      go vet ./...
                      go test -v ./...

    deploy:
        working_directory: /go/src/github.com/L-oris/go-heroku-continuous_deployment
        docker:
            - image: circleci/golang:1.10.3
        steps:
            - checkout
            - run:
                  name: Deploy to Heroku
                  command: |
                      # disable warning: "The authenticity of host 'heroku.com (50.19.xx.xxx)' can't be established"
                      echo "StrictHostKeyChecking no" >> ~/.ssh/config
                      git push "git@heroku.com:${HEROKU_APP_NAME}.git" master -f

workflows:
    version: 2
    build-deploy:
        jobs:
            - build
            - test:
                  requires:
                      - build
            - hold:
                  type: approval
                  requires:
                      - test
                  filters:
                      branches:
                          only:
                              - master
            - deploy:
                  requires:
                      - hold
                  filters:
                      branches:
                          only: master
